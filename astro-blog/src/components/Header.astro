---
import HeaderLink from './HeaderLink.astro';
import { SITE_TITLE, getTitle } from '../consts';

const dynamicTitle = await getTitle();
---

<header class="fixed top-0 w-full z-40 transition-all duration-300 bg-black/90 backdrop-blur-sm shadow-lg">
	<div class="max-w-7xl mx-auto px-3 sm:px-6 lg:px-8">
		<nav class="flex items-center justify-between h-14 sm:h-16">
			<a href="/" class="flex items-center manga-border bg-red-500 px-3 py-1 sm:px-4 sm:py-2 transform -rotate-2">
				<span class="ml-1 sm:ml-2 text-lg sm:text-xl manga-title">{dynamicTitle}</span>
			</a>
			
			<div class="hidden md:flex items-center space-x-4">
				<HeaderLink href="/">Home</HeaderLink>
				<HeaderLink href="/blog">Blog</HeaderLink>
				<HeaderLink href="/blog/archive">Archive</HeaderLink>
				<HeaderLink href="/about">About</HeaderLink>
				
				<!-- Search Button -->
				<a href="/blog/search" class="manga-border px-4 py-2 hover:text-red-500 transition-all transform hover:scale-105 flex items-center gap-2">
					<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
						<path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" />
					</svg>
					Search
				</a>
				
				<!-- Links to main Manga-Oppa site -->
				<a href="/../../" class="manga-border px-4 py-2 hover:text-red-500 transition-all transform hover:scale-105 hover:-rotate-2 flex items-center gap-2">
					Main Site
				</a>
				<a href="/../../discover" class="manga-border px-4 py-2 hover:text-red-500 transition-all transform hover:scale-105 hover:rotate-2 flex items-center gap-2">
					Discover
				</a>
			</div>
			
			<button
				id="menu-toggle"
				class="md:hidden manga-border p-1.5 sm:p-2 transform hover:rotate-3 transition-transform menu-button focus:outline-none"
				aria-label="Toggle Menu"
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
				</svg>
			</button>
		</nav>
	</div>
	
	<!-- Mobile Menu -->
	<div id="mobile-menu" class="md:hidden fixed inset-0 bg-black/95 z-50 pt-20 sm:pt-24 mobile-menu hidden overflow-y-auto">
		<div class="p-4 space-y-4 max-h-screen overflow-y-auto pb-32">
			<a href="/" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:-rotate-2 text-center text-lg">
				Home
			</a>
			<a href="/blog" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:rotate-2 text-center text-lg">
				Blog
			</a>
			<a href="/blog/archive" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:-rotate-2 text-center text-lg">
				Archive
			</a>
			<a href="/blog/search" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:rotate-2 text-center text-lg">
				Search
			</a>
			<a href="/about" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:-rotate-2 text-center text-lg">
				About
			</a>
			
			<!-- Links to main Manga-Oppa site -->
			<a href="/../../" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:rotate-2 text-center text-lg">
				Main Site
			</a>
			<a href="/../../discover" class="block manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:-rotate-2 text-center text-lg">
				Discover
			</a>
			
			<button 
				id="close-menu"
				class="block w-full manga-panel py-3 px-4 hover:text-red-500 transition-colors transform hover:-rotate-2 flex items-center justify-center gap-2 mt-10"
				aria-label="Close Menu"
			>
				<svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
				</svg>
				Close
			</button>
		</div>
	</div>
</header>

<div class="fixed inset-0 screen-tone pointer-events-none"></div>

<script>
	// Mobile menu toggle
	document.addEventListener('DOMContentLoaded', () => {
		const menuToggle = document.getElementById('menu-toggle');
		const closeMenu = document.getElementById('close-menu');
		const mobileMenu = document.getElementById('mobile-menu');
		const mobileLinks = mobileMenu?.querySelectorAll('a');
		
		// Disable scroll when menu is open
		const toggleScrollLock = (lock) => {
			document.body.style.overflow = lock ? 'hidden' : '';
		};
		
		menuToggle?.addEventListener('click', () => {
			// Ensure the mobile menu is properly displayed
			if (mobileMenu) {
				mobileMenu.classList.toggle('hidden');
				const isMenuOpen = !mobileMenu.classList.contains('hidden');
				toggleScrollLock(isMenuOpen);
				
				// Force repaint to ensure proper display
				setTimeout(() => {
					if (!mobileMenu.classList.contains('hidden')) {
						mobileMenu.style.opacity = '0';
						setTimeout(() => {
							mobileMenu.style.opacity = '1';
						}, 10);
					}
				}, 0);
			}
		});
		
		closeMenu?.addEventListener('click', () => {
			mobileMenu?.classList.add('hidden');
			toggleScrollLock(false);
		});
		
		// Close menu when a link is clicked
		mobileLinks?.forEach(link => {
			link.addEventListener('click', () => {
				mobileMenu?.classList.add('hidden');
				toggleScrollLock(false);
			});
		});
		
		// Sticky header behavior
		let lastScrollTop = 0;
		const header = document.querySelector('header');
		
		window.addEventListener('scroll', () => {
			if (mobileMenu?.classList.contains('hidden')) {
				const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
				
				if (scrollTop > lastScrollTop && scrollTop > 100) {
					// Scrolling down, hide header
					header?.classList.add('-translate-y-full');
				} else {
					// Scrolling up, show header
					header?.classList.remove('-translate-y-full');
				}
				
				lastScrollTop = scrollTop;
			}
		});
	});
</script>
